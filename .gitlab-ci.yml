## PRO TIP : Test your modifications locally with:
## $ gitlab-ci-multi-runner exec docker {name_of_the_job}


variables:
    PGDATA: /var/lib/postgresql/data
    PGUSER: postgres
    EXTDIR: /usr/share/postgresql/10/extension/
    PSQL: psql -v ON_ERROR_STOP=1

image: postgres:10

before_script:
    - mkdir -p $PGDATA
    - mkdir -p $EXTDIR
    - chown postgres $PGDATA
    - gosu postgres initdb
    - gosu postgres pg_ctl start

# PostgreSQL 9.4 is not supported
make9.4:
  stage: build
  image: postgres:9.4
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-9.4
    - make extension
    - make install
    - make installcheck
  artifacts:
    paths:
        - anon*
        - regression.*
        - results/
    expire_in: 1 day
  when: manual
  allow_failure: yes

make9.5:
  stage: build
  image: postgres:9.5
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-9.5
    - make extension
    - make install
    - make installcheck
  artifacts:
    paths:
        - anon*
        - regression.*
        - results/
    expire_in: 1 day
  when: manual
  allow_failure: yes

make9.6:
  stage: build
  image: postgres:9.6
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-9.6
    - make extension
    - make install
    - make installcheck
  artifacts:
    paths:
        - anon*
        - regression.*
        - results/
    expire_in: 1 day
  when: manual

make:
  stage: build
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-10
    - make extension
    - make install
    - make installcheck
  artifacts:
    paths:
        - anon*
        - regression.*
        - results/
    expire_in: 1 day

make11:
  stage: build
  image: postgres:11
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-11
    - make extension
    - make install
    - make installcheck
  artifacts:
    paths:
        - anon*
        - regression.*
        - results/
    expire_in: 1 day
  when: manual


perf:
  stage: test
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-10 postgresql-contrib-10
    - make extension
    - make install
    - make --always-make demo/perf.sql
  when: manual

random:
  stage: test
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-10 postgresql-contrib-10
    - make extension
    - make install
    - make --always-make demo/random.sql
  when: manual

masking:
  stage: test
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-10 postgresql-contrib-10
    - make extension
    - make install
    - make --always-make demo/masking.sql
  when: manual


partial:
  stage: test
  script:
    - apt-get update && apt-get install -y make postgresql-server-dev-10 postgresql-contrib-10
    - make extension
    - make install
    - make --always-make demo/partial.sql
  when: manual



pgxn:
  stage: deploy
  image: alpine
  before_script:
    - echo 'Disable before_script.'
  script:
    - apk update && apk add make git zip
    - make pgxn
  artifacts:
    paths:
      - anon*
      - _pgxn/
    expire_in: 1 day
  only:
    - master

test_pgxn:
  stage: deploy
  script:
    - apt-get update && apt-get install -y postgresql-server-dev-10 pgxnclient
    - pgxn install postgresql_anonymizer
  when: manual
